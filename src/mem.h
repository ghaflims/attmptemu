#ifndef _MEM_H_
#define _MEM_H_


#include <stdint.h>
// it's just a fancy way to say 64KB better use 64*1024 but mah..
#define MEM_SIZE 0x10000
#define PRG_START 0x600
#define NMI_START 0x300
//static const char prg[5] = {0xa9,-3,0x69,5};
//static const uint8_t prg[] = {0xa9,1,0xa2,2,0xa0,3};
//static const uint8_t prg[] = {0xa9, 0x02, 0xaa, 0xa8, 0x8d, 0x01, 0x03, 0xa0, 0x05, 0x98, 0xa2, 0x01, 0x7d, 0x00, 0x03 };
//static const uint8_t prg[] = {0xa9, 0x03, 0x8d, 0x00, 0x02, 0x0e, 0x00, 0x02, 0xad, 0x00, 0x02};
//static const uint8_t prg[] = {0x18, 0x90, 0x04, 0xa2, 0x02, 0x90, 0x04, 0xa9, 0x01, 0x90, 0xf8, 0xa0, 0x03};
//static const uint8_t prg[] = {0xa9, 0x01, 0xaa, 0xca};
//static const uint8_t prg[] = {0x20, 0x07, 0x06, 0x6a, 0x4c, 0x0c, 0x06, 0xa9, 0x06, 0xe9, 0x02, 0x60, 0xa0, 0x03};
// test ppu io access write to address 0x1010 value 0xab and read it back
static const uint8_t prg[] = {0xa9, 0x10, 0x8d, 0x06, 0x20, 0x8d, 0x06, 0x20, 0xa9, 0xab, 0x8d, 0x07, 0x20, 0xa9, 0x10, 0x8d, 0x06, 0x20, 0x8d, 0x06, 0x20, 0xad, 0x07, 0x20};
static const uint8_t nmiprg[] = {0xa9, 0xed, 0x8d, 0x00, 0x02, 0x40};

uint8_t* mem;
void mem_init(void);
void mem_free(void);
void wb(uint16_t addr, uint8_t b);
uint8_t rb(uint16_t addr);


#endif
